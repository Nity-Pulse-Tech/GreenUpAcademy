# Generated by Django 5.2.4 on 2025-09-20 20:13

import django.core.validators
import django.db.models.deletion
import django_extensions.db.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('admission', '0006_program_entry_level'),
    ]

    operations = [
        migrations.CreateModel(
            name='Formation',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1, verbose_name='status')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Marks the record as deleted without removing it.')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Stores additional metadata in JSON format.', null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address associated with the record creation or update.', null=True)),
                ('slug', models.SlugField(blank=True, help_text='URL-friendly identifier for the formation, auto-generated from program name.', max_length=255, null=True, unique=True)),
                ('image', models.ImageField(blank=True, help_text='Image representing the formation (e.g., program banner).', null=True, upload_to='formations/images/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'svg'])])),
                ('objectives', models.JSONField(blank=True, default=list, help_text="List of objectives for the formation (e.g., ['Atteindre un niveau de savoirs académiques...', 'Développer un niveau de formation...']).")),
                ('competencies', models.JSONField(blank=True, default=list, help_text='List of academic competencies targeted by the formation.')),
                ('domain', models.CharField(help_text='Academic domain of the formation (e.g., Sciences de gestion, Informatique).', max_length=100)),
                ('specialization', models.CharField(blank=True, help_text='Specialization within the domain, if applicable (e.g., Vente & Marketing).', max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Indicates whether the formation is actively offered.')),
                ('learn_more_url', models.URLField(blank=True, help_text='URL for detailed information about the formation.', null=True)),
                ('program', models.ForeignKey(help_text='Associated academic program from the admission module.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='formations', to='admission.program')),
            ],
            options={
                'verbose_name': 'Formation',
                'verbose_name_plural': 'Formations',
                'ordering': ['program__name'],
            },
        ),
        migrations.CreateModel(
            name='FormationOption',
            fields=[
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1, verbose_name='status')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('is_deleted', models.BooleanField(default=False, help_text='Marks the record as deleted without removing it.')),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Stores additional metadata in JSON format.', null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address associated with the record creation or update.', null=True)),
                ('name', models.CharField(help_text='Name of the option (e.g., Systèmes d’information, Programmation applications).', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of the option.', null=True)),
                ('competencies', models.JSONField(blank=True, default=list, help_text='Specific competencies targeted by this option.')),
                ('formation', models.ForeignKey(help_text='Parent formation for this option.', on_delete=django.db.models.deletion.CASCADE, related_name='options', to='formation.formation')),
            ],
            options={
                'verbose_name': 'Formation Option',
                'verbose_name_plural': 'Formation Options',
            },
        ),
        migrations.AddIndex(
            model_name='formation',
            index=models.Index(fields=['slug'], name='formation_f_slug_e2107f_idx'),
        ),
        migrations.AddIndex(
            model_name='formation',
            index=models.Index(fields=['is_deleted'], name='formation_f_is_dele_cc66e2_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='formationoption',
            unique_together={('formation', 'name')},
        ),
    ]
